#!/bin/env ruby

require 'optparse'
require 'dynflow'

utils = ::Dynflow::Utilities::Export.new

OptionParser.new do |opts|
  opts.banner = 'Usage: dynflow-export [options]'

  opts.on('-h', '--help', 'Prints help') do
    puts opts
    puts "\nAll options can be subtituted by environment variables, however CLI arguments take precedence."
    puts <<-DESC
    * TASK_SEARCH     : scoped search filter (example: 'id = "d99bb632-2414-4c2b-af9a-af475b2a4723"')
    * TASK_FILE       : file to export to
    * TASK_FORMAT     : format to use for the export (either html or csv)
    * TASK_DAYS       : number of days to go back

If TASK_SEARCH is not defined, it defaults to all tasks in the past 7 days and
all unsuccessful tasks in the past 60 days. The default TASK_FORMAT is html
which requires a tar.gz file extension.
DESC

    exit 0
  end

  opts.on('-s', '--search=SEARCH', 'Search for SEARCH') do |arg|
    utils.task_search = arg
  end

  opts.on('-d', '--days=DAYS', 'Get tasks from last DAYS days') do |arg|
    utils.task_days = arg
  end

  opts.on('-f', '--format=FORMAT', 'Output in FORMAT, one of csv, html, json') do |arg|
    sanitized = arg.downcase
    raise "Unsupported format #{arg}" unless %w(csv html json).include?(sanitized)
    utils.task_format = sanitized
  end

  opts.on('-o', '--output=FILE', 'Output to FILE') do |arg|
    utils.task_file = arg
  end

  opts.on('-c', '--connection-string=CONN', 'Connect to database specified by CONN') do |arg|
    utils.connection_string = arg
  end
end.parse!

puts "Gathering #{utils.plans.count} tasks."
if utils.plans.count.zero?
  puts "Nothing to do."
else
  utils.export
  puts "Created #{utils.export_filename}"
end
